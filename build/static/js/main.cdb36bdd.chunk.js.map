{"version":3,"sources":["ShowTime.js","Todolist/Todoing.js","Todolist/Todoinput.js","Todolist/Todolist.js","Request.js","Context/Context.js","Context/Child.js","Context/Parent.js","Portal/Portals.js","Hoc/Hoc.js","Homework/Todoing2.js","Homework/Todoinput2.js","Homework/Todolist2.js","Portal/ParentProtal.js","Sider.js","NoMatch.js","Router/UserInfor.js","Router/Topic.js","Router/Hooks.js","App.js","index.js"],"names":["Component","Todoing","this","props","todo","map","item","idx","key","onClick","delTodo","Todoinput","handleInput","e","keyCode","addTodo","target","value","handleChange","setState","name","parseInt","state","n1","n2","onChange","onKeyDown","type","Todolist","addItem","msg","console","log","delItem","a","splice","b","Object","keys","forEach","Request","data","fetch","method","body","then","res","json","result","index","album_title","author","con","React","createContext","Child","Provider","Consumer","context","contextType","Portals","cli","ReactDOM","createPortal","url","hoc","Com","title","Music","Music1","Mymusic","Mymusic1","Hoc","length","addunder2","under","addunder3","checked","delunder","Todoinput2","placeholder","localStorage","setItem","JSON","stringify","addItem2","addItem3","delItem2","parse","getItem","Sider","style","float","exact","activeStyle","background","colr","fontsize","to","NoMatch","UserInfor","match","params","id","history","push","Topic","page","prevProps","prevState","width","height","overflow","dangerouslySetInnerHTML","__html","content","Hooks","useHistory","useParams","LoginWithRouter","withRouter","render","document","getElementById","createElement"],"mappings":"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","file":"static/js/main.cdb36bdd.chunk.js","sourcesContent":["import React,{Component,Fragment} from 'react';\r\n// 类定义组件\r\nexport default class ShowTime extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            time: new Date().toLocaleString()\r\n        }\r\n        // this.handleClick = this.handleClick.bind(this);\r\n        console.log('constructor',this.props.word);\r\n    }\r\n    componentDidMount(){\r\n        console.log('componentDidMount');\r\n        setTimeout(()=>{\r\n            console.log(1)\r\n            this.setState({\r\n                time: new Date().toLocaleString()\r\n            })\r\n        },1000)\r\n    }\r\n    shouldComponentUpdate(){\r\n        return true;\r\n    }\r\n    getSnapshotBeforeUpdate(){\r\n        console.log('getsnapshot');\r\n    }\r\n    componentDidUpdate(){\r\n        console.log('didupdate');\r\n    }\r\n    handleClick = (num,e)=>{\r\n        console.log(num,e);\r\n        console.log('点击成功');\r\n    }\r\n    divClick(num,e){\r\n        console.log(num,e);\r\n    }\r\n    render(){\r\n        console.log('render');\r\n        return (\r\n            <Fragment>\r\n                <div onClick={(ev)=>{this.handleClick(1,ev)}}>\r\n                    {this.state.time}</div>\r\n                <div onClick={this.divClick.bind(this,333)}>hello{this.props.word}</div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n// 默认导出，只能导出一次\r\n// export default ShowTime;\r\n\r\n// 命名导出,可写多个export\r\n// export {ShowTime};","import React, { Component } from 'react'\r\n\r\nexport default class Todoing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>正在进行</h1>\r\n                <ul>\r\n                    {\r\n                        this.props.todo.map((item,idx)=><li key={idx}>{item}----<button onClick={()=>{this.props.delTodo(idx)}}>删除</button></li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n//子组件---->父组件传递数据，调用子组件时往子组件传递一个函数\r\n// 子组件通过props调用该函数\r\n\r\n// 受控组件和非受控组件\r\n\r\n// 非受控组件\r\n// 代码简单、比较适用于一次性获取表单的值\r\n// export default class Todoinput extends Component {\r\n//     componentDidMount(){\r\n//         console.log(this.inp.value);\r\n//         // console.log(this);\r\n//     }\r\n//     search = ()=>{\r\n//         console.log(this.inp.value);\r\n//     }\r\n//     render(){\r\n//         return (<div>\r\n//                     <input ref={inp=>this.inp = inp} type=\"text\"/>\r\n//                     <button onClick={this.search}>查询</button>\r\n//                 </div>)\r\n//     }\r\n// }\r\n\r\n\r\n// 受控组件：value值被react的状态控制\r\n// 实时获取或处理输入的内容\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            n1: 0,\r\n            n2: 0\r\n        }\r\n    }\r\n    handleInput = (e)=>{\r\n        if(e.keyCode === 13){\r\n            this.props.addTodo(e.target.value);\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]: parseInt(e.target.value)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input name=\"n1\" onChange={this.handleChange} value={this.state.n1} onKeyDown={(e)=>this.handleInput(e)} type=\"text\"/>\r\n                +\r\n                <input name=\"n2\" onChange={this.handleChange} value={this.state.n2} onKeyDown={(e)=>this.handleInput(e)} type=\"text\"/>\r\n                <p>{this.state.n1+this.state.n2}</p>\r\n                <button>查询</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Todoing from './Todoing';\r\nimport Todoinput from './Todoinput';\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            todo: [1,2,3]\r\n        }\r\n\r\n        // var arr = [1,2,{a:100}];\r\n        // 深拷贝\r\n        // var b = JSON.parse(JSON.stringify(arr));\r\n        // b[2].a = 200;\r\n        // console.log(arr);\r\n\r\n        // 对象的拷贝\r\n        var a= {a:100,b:200};\r\n        // var o = Object.assign({},a);\r\n        // console.log(o===a);\r\n        // console.log(o);\r\n        // Object.keys返回由属性名组成的一个数组\r\n        Object.keys(a).forEach((item)=>{\r\n            console.log(item);\r\n            console.log(a[item]);\r\n        })\r\n        // 尽量不用for in\r\n        // for(var item in a){\r\n        //     console.log(a);\r\n        // }\r\n    }\r\n    addItem = (msg)=>{\r\n        // this.state.todo.push(msg)\r\n        // console.log(this.state.todo)\r\n        this.setState({\r\n            todo: [...this.state.todo,msg]\r\n        })\r\n        console.log(msg);\r\n    }\r\n    delItem = (a)=>{\r\n        // this.state.todo.splice(a,1); //不要写\r\n        // 深拷贝\\浅拷贝\r\n\r\n        var todo = [...this.state.todo];\r\n        todo.splice(a,1);\r\n        this.setState({\r\n            todo: todo\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput addTodo={this.addItem}/>\r\n                <Todoing delTodo={this.delItem} todo={this.state.todo}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react' //\r\nimport Axios from 'axios';\r\nexport default class Request extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = { //状态\r\n            data:[]\r\n        }\r\n    }\r\n\r\n    //请求\r\n    componentDidMount(){\r\n        fetch('https://api.apiopen.top/musicRankingsDetails?type=1',{method:'post',body:'{name:111}'}).then((res)=>{\r\n            \r\n            return res.json();\r\n        })    \r\n        .then((res)=>{\r\n            this.setState({ //\r\n                data:res.result\r\n            })\r\n            console.log(res);\r\n        })\r\n        }\r\n        // Axios.get('https://api.apiopen.top/musicRankingsDetails?type=1')\r\n        //     .then((res)=>{\r\n        //         console.log(res);\r\n        //         this.setState({\r\n        //             data: res.data.result\r\n        //         })\r\n        //     })\r\n    // }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>请求接口</h1>\r\n                <ul>\r\n                    {\r\n                        this.state.data.map(\r\n                            (item,index)=>(\r\n                                <li key={index}>\r\n                                    <h2>{item.album_title}</h2>\r\n                                    <p>{item.author}</p>\r\n                                </li>\r\n                            )\r\n                        )\r\n                    }\r\n                    \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n//生成context 对象\r\nexport const  con = React.createContext();\r\nexport const  con2 = React.createContext();","import React, { Component } from 'react'\r\nimport  {con} from './Context'\r\nlet {Provider,Consumer} = React.createContext(); //生成一个对象\r\nexport default class Child extends Component {\r\n    render() {\r\n        console.log(this);\r\n        return (\r\n            <div>\r\n                <h1>Context</h1>\r\n                <div>{this.context}</div>\r\n                {/* <Consumer>\r\n                    {\r\n                        (data)=><div>{data}</div>\r\n                    }\r\n                </Consumer> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nChild.contextType = con;","import React, { Component } from 'react'\r\nimport Child from './Child';\r\nexport default class Parent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Child />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nexport default class Portals extends Component {\r\n    cli = ()=>{\r\n        console.log('protals click');\r\n    }\r\n    render() {\r\n        return (\r\n            ReactDOM.createPortal(\r\n                <div>Portal </div>\r\n            )\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nlet url = 'https://api.apiopen.top/musicRankingsDetails?type=1';\r\nfunction hoc(Com,url,title){\r\n    class A extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((res)=>{\r\n                this.setState({\r\n                    data: res.result\r\n                })\r\n            })\r\n        }\r\n        render(){\r\n            return (\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <Com {...this.props} data={this.state.data} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return A;\r\n}\r\nclass Music extends Component{\r\n    render(){\r\n        return <ul>\r\n            <div>{this.props.name}</div>\r\n            {\r\n                this.props.data.map((item,idx)=>{\r\n                    return <li key={idx}>{item.title}</li>\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\nclass Music1 extends Component{\r\n    render(){\r\n        return <ul>\r\n            {\r\n                this.props.data.map((item,idx)=>{\r\n                    return (<div>\r\n                            <p key={idx}>{item.title}</p>\r\n                            <p key={idx}>{item.author}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\nvar Mymusic = hoc(Music,url,'第一个');\r\nvar Mymusic1 = hoc(Music1,url,'第二个');\r\n\r\nexport default class Hoc extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Mymusic name='aa'/>\r\n                <Mymusic1/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nexport default class Todoing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>正在进行{this.props.todo.length}</h1>\r\n\r\n                <ul>\r\n                    {\r\n                        this.props.todo.map((item,idx)=><li key={item}>\r\n                            <input onClick={()=>this.props.addunder2(item,idx)} type=\"checkbox\"/>{item}<button onClick={()=>{this.props.delTodo(idx)}}>删除</button></li>)\r\n                    }\r\n                </ul>\r\n                <h1>已经完成{this.props.under.length}</h1>\r\n\r\n                <ul>\r\n                    {\r\n                        this.props.under.map((item,idx)=><li key={item}>\r\n                            <input onClick={()=>this.props.addunder3(item,idx)} type=\"checkbox\" checked=\"checked\"/>{item}----<button onClick={()=>{this.props.delunder(idx)}}>删除</button></li>)\r\n                            // 要有本地存储，刷新页面后数据不能丢；\r\n                            //点击上边复选框以后 能存储到下边 的数组  点击下边复选框以后 能存储到上边的数组 到时候再读取出来\r\n                            //“正在进行”和“已经完成”后面的待办事项数量统计要实现\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { placeholder } from '@babel/types';\r\n\r\nexport default class Todoinput2 extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            n1 : \"\"\r\n        }\r\n    }\r\n    handleInput = (e)=>{\r\n        if(e.keyCode === 13){ //回车键\r\n            this.props.addTodo(e.target.value);\r\n            // this.name = \"ss\";\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Todolist\r\n                {/* 第一次回车 添加内容  第二次恢复文本框原始内容 */}\r\n                <input name=\"n1\"  onChange={this.handleChange} value={this.state.n1} onKeyDown={(e)=>this.handleInput(e)}  placeholder='添加ToDo' type=\"text\"/>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Todoing from './Todoing2';\r\nimport Todoinput from './Todoinput2';\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            todo: JSON.parse(localStorage.getItem('todo') || '[]'),\r\n            under: JSON.parse(localStorage.getItem('under') || '[]')\r\n        }\r\n    }\r\n    addItem = (msg)=>{//文本框添加\r\n        // var todo =[...this.state.todo,msg];\r\n        this.setState({\r\n            todo: [...this.state.todo,msg],\r\n        },()=>{\r\n            // localStorage.setItem(msg,key)\r\n            localStorage.setItem('todo',JSON.stringify(this.state.todo));\r\n        })\r\n    }\r\n    addItem2 = (msg,key)=>{//删掉todo里的  添加到under\r\n        var todo =[...this.state.todo,msg];\r\n\r\n        this.delItem(key);\r\n        this.setState({\r\n            under: [...this.state.under,msg],\r\n        },()=>{\r\n            // localStorage.setItem(msg,key)\r\n            localStorage.setItem('under',JSON.stringify(this.state.under)); \r\n        })\r\n    }\r\n    addItem3 = (msg,key)=>{//删掉under里的，添加到todo\r\n        var todo =[...this.state.todo,msg];\r\n\r\n        this.delItem2(key);\r\n        this.setState({\r\n            todo: [...this.state.todo,msg],\r\n        },()=>{\r\n            localStorage.setItem('todo',JSON.stringify(this.state.todo));\r\n        })\r\n    }\r\n    delItem = (a)=>{ //删掉todo里的\r\n        var todo = [...this.state.todo];\r\n        todo.splice(a,1);\r\n        this.setState({\r\n            todo: todo\r\n        },()=>{\r\n            localStorage.setItem('todo',JSON.stringify(this.state.todo));\r\n        })\r\n    }\r\n    delItem2 = (a)=>{//删掉under里的\r\n        var under = [...this.state.under];\r\n        under.splice(a,1);\r\n        this.setState({\r\n            under:under\r\n        },()=>{\r\n            localStorage.setItem('under',JSON.stringify(this.state.under));\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput addTodo={this.addItem} />\r\n                <Todoing delTodo={this.delItem} delunder={this.delItem2} todo={this.state.todo} under={this.state.under} addunder2={this.addItem2} addunder3 = {this.addItem3}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Portals from './Portals'\r\n\r\nexport default class ParentPortal extends Component {\r\n    cli = ()=>{\r\n        console.log('ParentPortal click');\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={this.cli}>\r\n                <Portals>\r\n                    <h1>音乐</h1>\r\n                    <h1>音乐</h1>\r\n                </Portals>\r\n                <Portals>\r\n                    <li>列表</li>\r\n                </Portals>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Link,NavLink} from 'react-router-dom'\r\nexport default class Sider extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul style={{float:'left'}}>\r\n                    <li><NavLink exact  activeStyle={{background:'pink',colr:'#fff',fontsize:30}} to='/'>Todolist</NavLink></li>\r\n                    <li><NavLink activeStyle={{background:'pink',colr:'#fff',fontsize:30}} to='/hoc'>Hoc</NavLink></li>\r\n                    <li><NavLink activeStyle={{background:'pink',colr:'#fff',fontsize:30}} to='/request'>Request</NavLink></li>\r\n                    <li><Link  to='/userinfor/1'>userinfor1</Link></li>\r\n                    <li><Link  to='/userinfor/2'>userinfor2</Link></li>\r\n                    {\r\n                        [1,2,3,4,5,6].map((item)=>(\r\n                            // <li><Link to={'/userinfor/'+item}>page{item}</Link></li>\r\n                            // ))\r\n                            <li key={item}><Link to={'/topic/'+item}>topic{item}</Link></li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n//hooks \r\nexport default function NoMatch(){\r\n\r\n    return (\r\n        <div>\r\n            <h1>404</h1>\r\n            <p>您访问的页面不存在</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n// 优先是函数组件\r\n\r\nexport default function UserInfor(props){\r\n    console.log(props); \r\n    function goTodo(){\r\n        props.history.push('/');\r\n    }\r\n    // 在console 控制台 输入 location.href +网址 跳转到对应网址\r\n    // zhangsan\r\n    return(\r\n        <div>\r\n            <p ></p>\r\n            {/* <p>name:yingzi</p> */}\r\n            {/* <p>id:{props.location.state}</p> */}\r\n            <p>id:{props.match.params.id}</p>\r\n            <button onClick={goTodo}>跳转到todolist</button>\r\n\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Topic extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data :[]\r\n        }\r\n    }\r\n\r\n    // shouldComponentUpdate(){\r\n\r\n    // }\r\n\r\n    componentDidMount(){\r\n        let page = this.props.match.params.page;\r\n        fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n        .then((res)=>res.json())\r\n        .then((res)=>{\r\n            this.setState({data:res.data});\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevProps.match.params.page!==this.props.match.params.page){\r\n            let page = this.props.match.params.page;\r\n            fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n                .then((res)=>res.json())\r\n                .then((res)=>{\r\n                        this.setState({data:res.data});\r\n                    })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n               {\r\n                 this.state.data.map((item)=>(\r\n                    <div style={{width:800,height:800,overflow:'hidden'}} dangerouslySetInnerHTML={{__html:item.content}}></div>\r\n                ))  \r\n               }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {useHistory,useLocation,useParams,useRouteMatch} from 'react-router-dom';\r\n\r\nexport default function Hooks(){\r\n    let history = useHistory();\r\n    let {id} = useParams();\r\n    // console.log()\r\n    \r\n    return <div>\r\n        hello Hooks <h1>{id}</h1>\r\n        <button onClick={()=>history.push('/topic/1')}>跳转到Topic</button>\r\n    </div>\r\n}","import React, { Component } from 'react'\r\n// 写作业的时候 改成HashRouter\r\nimport {HashRouter as Router,Route,Switch,Redirect,withRouter} from 'react-router-dom';\r\n\r\nimport ShowTime from './ShowTime';\r\nimport Todolist from './Todolist/Todolist'\r\nimport Request from './Request';\r\nimport Parent from './Context/Parent';\r\nimport Hoc from './Hoc/Hoc';\r\nimport Sider from './Sider';\r\nimport {Button} from 'antd';\r\nimport NoMatch from './NoMatch';\r\nimport UserInfor from './Router/UserInfor';\r\nimport Topic from './Router/Topic';\r\nimport Hooks from './Router/Hooks';\r\n// antd 使用：\r\n// 1.下载安装antd框架：npm i antd\r\n// 2.在某个css里引入antd的css：@import '~antd/dist/antd.css'\r\n// 3.在需要的组件内import相应的组件，然后使用\r\n// function Login(this.props.){\r\n\r\n// }\r\nfunction Login(props){\r\n    console.log(props);\r\n    return <button>登录</button>\r\n}\r\nlet LoginWithRouter = withRouter(Login);\r\nexport default class App extends Component {\r\n    render() {\r\n        //所有的路由组件都得放在BrowserRouter里\r\n        //BrowserRouter里只能有一个子元素\r\n        return (\r\n            <Router basename=\"todolist\"> \r\n             {/*要找到仓库名的文件名 添加basename=\"\" */}\r\n                <div>\r\n                    <LoginWithRouter/>\r\n                    <Hooks />\r\n                    <Sider/>\r\n                    {/* <UserInfor name='zhangsan'/> */}\r\n                    <div style={{marginLeft: 50,float: 'left',border: '2px solid red'}}>\r\n                      <Switch> \r\n                        {/* <Route exact path='/' component={Todolist} /> */}\r\n                        <Route exact path='/' render={()=><Todolist/>} />\r\n                        {/* exact  是严格匹配  只有在是/的时候才能输出 */}\r\n                        {/* <Route exact path='/todolist' component={Todolist} /> */}\r\n                        <Route path='/hoc' component={Hoc} />\r\n                        {/* <Route path='todolist//hoc' component={Hoc} /> */}\r\n                        <Route path='/request' component={Request}/>\r\n                        {/* <Route path='/todolist/request' component={Request}/> */}\r\n                        <Route path='/userinfor/:id' component={UserInfor}/>\r\n                        <Route path='/hooks/:id' component={Hooks}/>\r\n                        <Route path='/Topic/:page' component={Topic}/>\r\n                        <Redirect from='/old' to='hoc/'/>\r\n\r\n                        <Route path='*' component={NoMatch}/>\r\n                        {/* NoMatch 放到最后 */}\r\n                      </Switch>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}","import React from 'react';  //引入一些库  引入可以不用  \nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ShowTime from './ShowTime'; //引入文件  文件夹才有用 引入了才有用\nimport Todolist from './Todolist/Todolist';\nimport Request  from './Request'; //引入request 写request\nimport Parent from './Context/Parent';\nimport Protals from './Portal/Portals'\nimport Hoc from './Hoc/Hoc';\nimport Homework from './Homework/Todolist2';\n// 组件交互\n// 父组件--->子组件：调用时在子组件上添加属性\n// 在子组件中通过props获取数据\n// let {Provider,Comsumer} = React.createContext();\nimport {con} from './Context/Context';\nimport ParentProtal from './Portal/ParentProtal';\nimport App from './App';\nlet color = 'red';\n//redux \n// ReactDOM.render(<Request/>,document.getElementById('root'));\n//<Request/>组件更换 页面输出换一下  手动更换 需要的话 就引入\n//想看哪一部分  就对此进行更换\nReactDOM.render(<Homework/>,\n    document.getElementById('root') );\n    // <App/>\n    // <Homework/>\n\n{/* <con.Provider value={color}>\n                    <ParentProtal/>\n                </con.Provider>\n    ,document.getElementById('root') */}\n\n// 函数定义组件（无生命周期函数）\n// 当只是渲染结构时\n// function Todo(props){\n//     return (\n//         <div>\n//             {/* 条件渲染 */}\n//             {props.list.length>=6?<h1>todo</h1>:''}\n//             {props.list.length>=5 && <h1>todo</h1>}\n//             <ul>\n//                 {/* 循环渲染 */}\n//                 {\n//                     props.list.map(\n//                         (item,index)=> index%2 === 0&&<li key={item}>{item}</li>\n//                     )\n//                 }\n//             </ul>\n//         </div>\n//     )\n// }\n// var item = [1,2,3,4,5];\n// ReactDOM.render(<Todo list={item}/>,document.getElementById('root'));\n\n\n\n\n\n// react元素创建后不可改变\n// function tick(){\n//     var e = <div>\n//                 <p>当前时间</p>\n//                 <p>当前时间</p>\n//                 <h1>{new Date().toLocaleString()}</h1>;\n//             </div>\n//     ReactDOM.render(e,document.getElementById('root'));\n// }\n// tick();\n// setInterval(tick,1000);\n\n// jsx表达式会被react转成一个对象，类似下面声明的obj对象\nvar ele = React.createElement(\n    'div',\n    {'id':'box'},\n    'hello',\n    React.createElement(\n        'h1',\n        {'id':'h'},\n        'react'\n    )\n);\nvar obj = {\n    type: 'div',\n    props: {\n        id: 'box',\n        class: 'box',\n        children: ['hello',{\n            type: 'h1',\n            props: {\n                id: 'h',\n                class: 'h',\n                children: ['react']\n            }\n        }]\n    }\n}\n\n// 自己声明render函数，实现页面渲染\nfunction render(obj,container){\n    var {type,props} = obj;\n    // 文档碎片\n    var fr = document.createDocumentFragment();\n\n    var ele = document.createElement(type);\n    for(var item in props){\n        if(item === 'class'){\n            ele.className = props[item];\n        }else if(item === 'children'){\n            for(var i=0;i<props[item].length;i++){\n                if(typeof props[item][i] === 'object'){\n                    render(props[item][i],ele);\n                }else{\n                    var txt = document.createTextNode(props[item][i]);\n                    ele.appendChild(txt);\n                }\n            }\n        }else{\n            ele[item] = props[item];\n        }\n    }\n    fr.appendChild(ele);\n    container.appendChild(fr);\n}\n// render(obj,document.getElementById('root'));\n\n// 注意以下性能问题及优化方法\n\n// 加载html文件、浏览器解析html生成DOM树\n// link加载css文件、解析css规则、和DOM树结合生成render tree、浏览器渲染引擎渲染render tree\n\n// 页面回流（重排）：内容改变、大小改变、结构改变\n// 页面重绘：把字体颜色、背景颜色等样式改变\n\n// 1、node.offsetLeft、node.offsetWidth等慎用\n// var root = document.getElementById('root');\n// var width = root.offsetWidth;\n// setInterval(function(){\n//     width += 1\n//     root.style.width = width + 'px';\n// },100)\n\n// display、width、height、font-size等会引起页面回流\n// document.body.style.width = '100px';\n// document.body.style.height = '100px';\n// 2、声明一个css的一个类\n// .change{\n//     width: 100px;\n//     height: 100px;\n// }\n// document.body.className = 'change';\n\n// 3、对节点的操作先用变量代替\n// console.time('a');\n// var str = '';\n// for(var i=0;i<1000;i++){\n//     str += '<li>'+i+'</li>';\n// }\n// document.body.innerHTML = str;\n// console.timeEnd('a');\n// 4、文档碎片的概念\n\n"],"sourceRoot":""}